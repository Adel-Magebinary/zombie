{"version":3,"sources":["zombie/interact.js"],"names":[],"mappings":"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","file":"zombie/interact.js","sourcesContent":["module.exports = class Interaction {\n\n  constructor(browser) {\n    this._browser       = browser;\n    // Collects all prompts (alert, confirm, prompt).\n    this._prompts       = [];\n    this._alertFns      = [];\n    this._confirmFns    = [];\n    this._confirmCanned = {};\n    this._promptFns     = [];\n    this._promptCanned  = {};\n  }\n\n  // When alert displayed to user, call this function.\n  onalert(fn) {\n    this._alertFns.push(fn);\n  }\n\n  // When prompted with a question, return the response. First argument\n  // may be a function.\n  onconfirm(question, response) {\n    if (typeof question === 'function')\n      this._confirmFns.push(question);\n    else\n      this._confirmCanned[question] = !!response;\n  }\n\n  // When prompted with message, return response or null if response is\n  // false. First argument may be a function.\n  onprompt(message, response) {\n    if (typeof message === 'function')\n      this._promptFns.push(message);\n    else\n      this._promptCanned[message] = response;\n  }\n\n  prompted(message) {\n    return this._prompts.indexOf(message) >= 0;\n  }\n\n  extend(window) {\n    // Implements window.alert: show message.\n    window.alert = (message)=> {\n      this._browser.emit('alert', message);\n      this._prompts.push(message);\n      for (let fn of this._alertFns)\n        fn(message);\n    };\n\n    // Implements window.confirm: show question and return true/false.\n    window.confirm = (question)=> {\n      this._browser.emit('confirm', question);\n      this._prompts.push(question);\n      let response = this._confirmCanned[question];\n      if (!(response || response === false)) {\n        for (let fn of this._confirmFns) {\n          response = fn(question);\n          if (response || response === false)\n            break;\n        }\n      }\n      return !!response;\n    };\n\n    // Implements window.prompt: show message and return value of null.\n    window.prompt = (message, defaultValue)=> {\n      this._browser.emit('prompt', message);\n      this._prompts.push(message);\n      let response = this._promptCanned[message];\n      if (!(response || response === false)) {\n        for (let fn of this._promptFns) {\n          response = fn(message, defaultValue);\n          if (response || response === false)\n            break;\n        }\n      }\n      return response ?  response.toString() :\n             (response === false) ? null :\n             (defaultValue || '');\n    };\n  }\n\n}\n"],"sourceRoot":"/source/"}