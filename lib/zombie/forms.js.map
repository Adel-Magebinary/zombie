{"version":3,"sources":["zombie/forms.js"],"names":[],"mappings":"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","file":"zombie/forms.js","sourcesContent":["// Patches to JSDOM for properly handling forms.\nconst DOM   = require('./dom');\nconst File  = require('fs');\nconst Mime  = require('mime');\nconst Path  = require('path');\n\n\n// The Form\n// --------\n\n// Forms convert INPUT fields of type file into this object and pass it as\n// parameter to resource request.\n//\n// The base class is a String, so the value (e.g. when passed in a GET request)\n// is the base filename.  Additional properties include the MIME type (`mime`),\n// the full filename (`filename`) and the `read` method that returns the file\n// contents.\nfunction uploadedFile(filename) {\n  const file    = new String(Path.basename(filename)); // jshint ignore:line\n  file.filename = filename;\n  file.mime     = Mime.lookup(filename);\n  file.read     = function() {\n    return File.readFileSync(filename);\n  };\n  return file;\n}\n\n\n// Implement form.submit such that it actually submits a request to the server.\n// This method takes the submitting button so we can send the button name/value.\nDOM.HTMLFormElement.prototype.submit = function(button) {\n  const form      = this;\n  const document  = form.ownerDocument;\n  const params    = {};\n\n  function process(index) {\n    const field = form.elements.item(index);\n    if (!field) {\n      submit();\n      return;\n    }\n\n    const name = field.getAttribute('name');\n    if (!field.getAttribute('disabled') && name) {\n      if (field.nodeName === 'SELECT') {\n        const selected = [...field.options]\n          .filter(option  => option.selected)\n          .map(options    => options.value);\n\n        if (field.multiple) {\n          params[name] = (params[name] || []).concat(selected);\n        } else {\n          const value = (selected.length > 0) ?\n            selected[0] :\n            (field.options.length && field.options[0].value);\n          params[name] = params[name] || [];\n          params[name].push(value);\n        }\n      } else if (field.nodeName === 'INPUT' && (field.type === 'checkbox' || field.type === 'radio')) {\n        if (field.checked) {\n          params[name] = params[name] || [];\n          params[name].push(field.value || '1');\n        }\n      } else if (field.nodeName === 'INPUT' && field.type === 'file') {\n        if (field.value) {\n          params[name] = params[name] || [];\n          params[name].push(uploadedFile(field.value));\n        }\n      } else if (field.nodeName === 'TEXTAREA' || field.nodeName === 'INPUT') {\n        if (field.type !== 'submit' && field.type !== 'image') {\n          params[name] = params[name] || [];\n          params[name].push(field.value || '');\n        }\n      }\n    }\n\n    process(index + 1);\n  }\n\n  function submit() {\n    // No triggering event, just get history to do the submission.\n    if (button && button.name) {\n      params[button.name] = params[button.name] || [];\n      params[button.name].push(button.value);\n    }\n\n    // Ask window to submit form, let it figure out how to handle this based on\n    // the target attribute.\n    document.window._submit({\n      url:      form.getAttribute('action') || document.location.href,\n      method:   form.getAttribute('method') || 'GET',\n      encoding: form.getAttribute('enctype'),\n      params:   params,\n      target:   form.getAttribute('target')\n    });\n  }\n\n  process(0);\n};\n\n\n\n// Replace dispatchEvent so we can send the button along the event.\nDOM.HTMLFormElement.prototype._dispatchSubmitEvent = function(button) {\n  const event = this.ownerDocument.createEvent('HTMLEvents');\n  event.initEvent('submit', true, true);\n  event._button = button;\n  return this.dispatchEvent(event);\n};\n\n\n// Default behavior for submit events is to call the form's submit method, but we\n// also pass the submitting button.\nDOM.HTMLFormElement.prototype._eventDefaults.submit = function(event) {\n  event.target.submit(event._button);\n};\n\n\n// Buttons\n// -------\n\n// Default behavior for clicking on inputs.\nDOM.HTMLInputElement.prototype._eventDefaults = {};\nDOM.HTMLInputElement.prototype._eventDefaults.click = function(event) {\n  const input = event.target;\n\n  function change() {\n    const event = input.ownerDocument.createEvent('HTMLEvents');\n    event.initEvent('change', true, true);\n    input.dispatchEvent(event);\n  }\n\n  switch (input.type) {\n    case 'reset': {\n      if (input.form)\n        input.form.reset();\n      break;\n    }\n    case 'submit': {\n      if (input.form)\n        input.form._dispatchSubmitEvent(input);\n      break;\n    }\n    case 'image': {\n      if (input.form)\n        input.form._dispatchSubmitEvent(input);\n      break;\n    }\n    case 'checkbox': {\n      change();\n      break;\n    }\n    case 'radio': {\n      if (!input.getAttribute('readonly')) {\n        input.checked = true;\n        change();\n      } \n    }\n  }\n};\n\n\n\n// Current INPUT behavior on click is to capture sumbit and handle it, but\n// ignore all other clicks. We need those other clicks to occur, so we're going\n// to dispatch them all.\nDOM.HTMLInputElement.prototype.click = function() {\n  const input = this;\n  input.focus();\n\n  // First event we fire is click event\n  function click() {\n    const event = input.ownerDocument.createEvent('HTMLEvents');\n    event.initEvent('click', true, true);\n    return input.dispatchEvent(event);\n  }\n\n  switch (input.type) {\n    case 'checkbox': {\n      if (!input.getAttribute('readonly')) {\n        const original    = input.checked;\n        input.checked     = !original;\n        const checkResult = click();\n        if (checkResult === false)\n          input.checked = original;\n      }\n      break;\n    }\n\n    case 'radio': {\n      if (!input.getAttribute('readonly')) {\n        if (input.checked) {\n          click();\n        } else {\n          const radios = input.ownerDocument.querySelectorAll(`input[type=radio][name='${this.getAttribute('name')}']`);\n          const checked = [...radios]\n            .filter(radio   => radio.checked && radio.form === this.form )\n            .map(radio  => {\n              radio.checked = false;\n            })[0];\n\n          input.checked = true;\n          const radioResult = click();\n          if (radioResult === false) {\n            input.checked = false;\n            [...radios]\n              .filter(radio   => radio.form === input.form )\n              .forEach(radio  => {\n                radio.checked = (radio == checked);\n              });\n          }\n        }\n      }\n      break;\n    }\n    \n    default: {\n      click();\n      break;\n    }\n  }\n};\n\n\n// Default behavior for form BUTTON: submit form.\nDOM.HTMLButtonElement.prototype._eventDefaults.click = function(event) {\n  const button = event.target;\n  if (button.getAttribute('disabled')) {\n    return;\n  } else {\n    const form = button.form;\n    if (form)\n      return form._dispatchSubmitEvent(button);\n  }\n};\n\n"],"sourceRoot":"/source/"}