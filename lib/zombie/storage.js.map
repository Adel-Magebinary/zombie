{"version":3,"sources":["zombie/storage.js"],"names":[],"mappings":"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","file":"zombie/storage.js","sourcesContent":["// See [Web Storage](http://dev.w3.org/html5/webstorage/)\nconst DOM = require('./dom');\n\n\n// Implementation of the StorageEvent.\nclass StorageEvent extends DOM.Event {\n\n  constructor(storage, url, key, oldValue, newValue) {\n    super('storage');\n    this._storage   = storage;\n    this._url       = url;\n    this._key       = key;\n    this._oldValue  = oldValue;\n    this._newValue  = newValue;\n  }\n\n  get url() {\n    return this._url;\n  }\n  get storageArea() {\n    return this._storage;\n  }\n  get key() {\n    return this._key;\n  }\n  get oldValue() {\n    return this._oldValue;\n  }\n  get newValue() {\n    return this._newValue;\n  }\n}\n\n\n// Storage area. The storage area is shared by multiple documents of the same\n// origin. For session storage, they must also share the same browsing context.\nclass StorageArea {\n\n  constructor() {\n    this._items     = new Map();\n    this._storages  = [];\n  }\n\n  // Fire a storage event. Fire in all documents that share this storage area,\n  // except for the source document.\n  _fire(source, key, oldValue, newValue) {\n    for (let [storage, window] of this._storages) {\n      if (storage === source)\n        continue;\n      const event = new StorageEvent(storage, window.location.href, key, oldValue, newValue);\n      window.dispatchEvent(event);\n    }\n  }\n\n  // Return number of key/value pairs.\n  get length() {\n    return this._items.size;\n  }\n\n  // Get key by ordinal position.\n  key(index) {\n    const keys = [...this._items.keys()];\n    return keys[index];\n  }\n\n  // Get value from key\n  get(key) {\n    return this._items.get(key) || null;\n  }\n\n  // Set the value of a key. We also need the source storage (so we don't send\n  // it a storage event).\n  set(source, key, value) {\n    const oldValue = this._items.get(key);\n    this._items.set(key, value);\n    this._fire(source, key, oldValue, value);\n  }\n\n  // Remove the value at the key. We also need source storage (see set above).\n  remove(source, key) {\n    const oldValue = this._items.get(key);\n    this._items.delete(key);\n    this._fire(source, key, oldValue);\n  }\n\n  // Remove all values. We also need source storage (see set above).\n  clear(source) {\n    this._items.clear();\n    this._fire(source);\n  }\n\n  get pairs() {\n    return [...this._items.entries()];\n  }\n\n  toString() {\n    this.pairs()\n      .map((name, value)=> `${name} = ${value}`)\n      .join('\\n');\n  }\n\n  // Associate local/sessionStorage and window with this storage area. Used when firing events.\n  associate(storage, window) {\n    this._storages.push([storage, window]);\n  }\n\n}\n\n\n// Implementation of the Storage interface, used by local and session storage.\nclass Storage {\n\n  constructor(area) {\n    this._area = area;\n  }\n\n  // ### storage.length => Number\n  //\n  // Returns the number of key/value pairs in this storage.\n  get length() {\n    return this._area.length;\n  }\n  \n  // ### storage.key(index) => String\n  //\n  // Returns the key at this position.\n  key(index) {\n    return this._area.key(index);\n  }\n  \n  // ### storage.getItem(key) => Object\n  //\n  // Returns item by key.\n  getItem(key) {\n    return this._area.get(key.toString());\n  }\n  \n  // ### storage.setItem(key, Object)\n  //\n  // Add item or change value of existing item.\n  setItem(key, value) {\n    this._area.set(this, key.toString(), value);\n  }\n  \n  // ### storage.removeItem(key)\n  //\n  // Remove item.\n  removeItem(key) {\n    this._area.remove(this, key.toString());\n  }\n  \n  // ### storage.clear()\n  //\n  // Remove all items.\n  clear() {\n    this._area.clear(this);\n  }\n  \n  // Dump to a string, useful for debugging.\n  dump() {\n    return this._area.dump();\n  }\n\n}\n  \n\n\n\n// Combined local/session storage.\nclass Storages {\n\n  constructor() {\n    this._locals    = {};\n    this._sessions  = {};\n  }\n\n  // Return local Storage based on the document origin (hostname/port).\n  local(host) {\n    if (!this._locals[host])\n      this._locals[host] = new StorageArea();\n    return new Storage(this._locals[host]);\n  }\n\n  // Return session Storage based on the document origin (hostname/port).\n  session(host) {\n    if (!this._sessions[host])\n      this._sessions[host] = new StorageArea();\n    return new Storage(this._sessions[host]);\n  }\n\n  // Extend window with local/session storage support.\n  extend(window) {\n    const storages = this;\n    window.StorageEvent = StorageEvent;\n    Object.defineProperties(window, {\n      localStorage: {\n        get() {\n          const { document } = this;\n          if (!document._localStorage)\n            document._localStorage = storages.local(document.location.host);\n          return document._localStorage;\n        }\n      },\n      sessionStorage: {\n        get() {\n          const { document } = this;\n          if (!document._sessionStorage)\n            document._sessionStorage = storages.session(document.location.host);\n          return document._sessionStorage;\n        }\n      },\n    });\n  }\n\n  // Used to dump state to console (debuggin)\n  dump() {\n    const serialized = [];\n    for (let domain of this._locals) {\n      let area = this._locals[domain];\n      serialized.push(`${domain} local:`);\n      for (let [name, value] of area.pairs)\n        serialized.push(`  ${name} = ${value}`);\n    }\n    for (let domain of this._sessions) {\n      let area = this._sessions[domain];\n      serialized.push(`${domain} session:`);\n      for (let [name, value] of area.pairs)\n        serialized.push(`  ${name} = ${value}`);\n    }\n    return serialized;\n  }\n\n  // browser.saveStorage uses this\n  save() {\n    const serialized = [`# Saved on ${new Date().toISOString()}`];\n    for (let domain of this._locals) {\n      let area = this._locals[domain];\n      let pairs = area.pairs;\n      if (pairs.length) {\n        serialized.push(`${domain} local:`);\n        for (let [name, value] of area.pairs)\n          serialized.push(`  ${escape(name)} = ${escape(value)}`);\n      }\n    }\n    for (let domain of this._sessions) {\n      let area = this._sessions[domain];\n      let pairs = area.pairs;\n      if (pairs.length) {\n        serialized.push(`${domain} session:`);\n        for (let [name, value] of area.pairs)\n          serialized.push(`  ${escape(name)} = ${escape(value)}`);\n      }\n    }\n    return serialized.join(`\\n`) + `\\n`;\n  }\n    \n  // browser.loadStorage uses this\n  load(serialized) {\n    let storage = null;\n    for (let item of serialized.split(/\\n+/)) {\n      if (item[0] === '#' || item === '')\n        continue;\n      if (item[0] === ' ') {\n        const [key, value] = item.split('=');\n        if (storage)\n          storage.setItem(unescape(key.trim()), unescape(value.trim()));\n        else\n          throw new Error('Must specify storage type using local: or session:');\n      } else {\n        const [domain, type] = item.split(' ');\n        if (type === 'local:') {\n          storage = this.local(domain);\n        } else if (type === 'session:') {\n          storage = this.session(domain);\n        } else\n          throw new Error(`Unkown storage type ${type}`);\n      }\n    }\n  }\n}\n\n\nmodule.exports = Storages;\n\n"],"sourceRoot":"/source/"}